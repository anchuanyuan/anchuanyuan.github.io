(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{447:function(a,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"javascript-基础-03-内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-基础-03-内置对象"}},[a._v("#")]),a._v(" JavaScript 基础 03-内置对象")]),a._v(" "),t("h2",{attrs:{id:"_1-内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-内置对象"}},[a._v("#")]),a._v(" 1 - 内置对象")]),a._v(" "),t("h3",{attrs:{id:"_1-1-内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-内置对象"}},[a._v("#")]),a._v(" 1.1 内置对象")]),a._v(" "),t("p",[a._v("​ JavaScript 中的对象分为 3 种："),t("strong",[a._v("自定义对象 、内置对象、 浏览器对象")]),a._v("\n​ 前面两种对象是 JS 基础 内容，属于 ECMAScript； 第三个浏览器对象属于 JS 独有的， JS API 讲解内置对象就是指 JS 语言自带的一些对象，这些对象供开发者使用，并提供了一些常用的或是"),t("strong",[a._v("最基本而必要的功能")]),a._v("（属性和方法），内置对象最大的优点就是帮助我们快速开发")]),a._v(" "),t("p",[a._v("​ JavaScript 提供了多个内置对象：Math、 Date 、Array、String 等")]),a._v(" "),t("h3",{attrs:{id:"_1-2-查文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-查文档"}},[a._v("#")]),a._v(" 1.2 查文档")]),a._v(" "),t("p",[a._v("​ 查找文档：学习一个内置对象的使用，只要学会其常用成员的使用即可，我们可以通过查文档学习，可以通过 MDN/W3C 来查询。\n​ Mozilla 开发者网络（MDN）提供了有关开放网络技术（Open Web）的信息，包括 HTML、CSS 和万维网及 HTML5 应用的 API。\n​ MDN:https://developer.mozilla.org/zh-CN/")]),a._v(" "),t("h3",{attrs:{id:"_1-3-math-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-math-对象"}},[a._v("#")]),a._v(" 1.3 Math 对象")]),a._v(" "),t("p",[a._v("​ Math 对象不是构造函数，它具有数学常数和函数的属性和方法。跟数学相关的运算（求绝对值，取整、最大值等）可以使用 Math 中的成员。")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("属性、方法名")]),a._v(" "),t("th",[a._v("功能")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Math.PI")]),a._v(" "),t("td",[a._v("圆周率")])]),a._v(" "),t("tr",[t("td",[a._v("Math.floor()")]),a._v(" "),t("td",[a._v("向下取整")])]),a._v(" "),t("tr",[t("td",[a._v("Math.ceil()")]),a._v(" "),t("td",[a._v("向上取整")])]),a._v(" "),t("tr",[t("td",[a._v("Math.round()")]),a._v(" "),t("td",[a._v("四舍五入版 就近取整 注意 -3.5 结果是 -3")])]),a._v(" "),t("tr",[t("td",[a._v("Math.abs()")]),a._v(" "),t("td",[a._v("绝对值")])]),a._v(" "),t("tr",[t("td",[a._v("Math.max()/Math.min()")]),a._v(" "),t("td",[a._v("求最大和最小值")])]),a._v(" "),t("tr",[t("td",[a._v("Math.random()")]),a._v(" "),t("td",[a._v("获取范围在[0,1)内的随机值")])])])]),a._v(" "),t("p",[a._v("​ 注意：上面的方法使用时必须带括号")]),a._v(" "),t("p",[a._v("​ "),t("strong",[a._v("获取指定范围内的随机整数")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getRandom")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("min"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("floor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("max "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" min "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" min\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"_1-4-日期对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-日期对象"}},[a._v("#")]),a._v(" 1.4 日期对象")]),a._v(" "),t("p",[a._v("​ Date 对象和 Math 对象不一样，Date 是一个构造函数，所以使用时需要实例化后才能使用其中具体方法和属性。Date 实例用来处理日期和时间")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("使用 Date 实例化日期对象")]),a._v(" "),t("ul",[t("li",[a._v("获取当前时间必须实例化：")])]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" now "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("ul",[t("li",[a._v("获取指定时间的日期对象")])]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" future "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2019/5/1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("注意：如果创建实例时并未传入参数，则得到的日期对象是当前时间对应的日期对象")])]),a._v(" "),t("li",[t("p",[a._v("使用 Date 实例的方法和属性")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021649-265478.png",alt:""}})])]),a._v(" "),t("li",[t("p",[a._v("通过 Date 实例获取总毫米数")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("总毫秒数的含义")]),a._v(" "),t("p",[a._v("​ 基于 1970 年 1 月 1 日（世界标准时间）起的毫秒数")])]),a._v(" "),t("li",[t("p",[a._v("获取总毫秒数")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 实例化Date对象")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" now "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 用于获取对象的原始值")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 简单写可以这么做")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" now "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. HTML5中提供的方法，有兼容性问题")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" now "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])])])])])]),a._v(" "),t("h3",{attrs:{id:"_1-5-数组对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-数组对象"}},[a._v("#")]),a._v(" 1.5 数组对象")]),a._v(" "),t("h4",{attrs:{id:"创建数组的两种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建数组的两种方式"}},[a._v("#")]),a._v(" 创建数组的两种方式")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("字面量方式")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("示例代码如下：")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'test'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])])]),a._v(" "),t("li",[t("p",[a._v("new Array()")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("示例代码如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var arr = new Array();\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("​ 注意：上面代码中 arr 创建出的是一个空数组，如果需要使用构造函数 Array 创建非空数组，可以在创建数组时传入参数")]),a._v(" "),t("p",[a._v("​ 参数传递规则如下：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("如果只传入一个参数，则参数规定了数组的长度")])]),a._v(" "),t("li",[t("p",[a._v("如果传入了多个参数，则参数称为数组的元素")])])])])])])]),a._v(" "),t("h4",{attrs:{id:"检测是否为数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检测是否为数组"}},[a._v("#")]),a._v(" 检测是否为数组")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("instanceof 运算符")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("instanceof 可以判断一个对象是否是某个构造函数的实例")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("instanceof")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])])])])]),a._v(" "),t("li",[t("p",[a._v("Array.isArray()")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Array.isArray()用于判断一个对象是否为数组，isArray() 是 HTML5 中提供的方法")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// true")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])])])])])]),a._v(" "),t("h4",{attrs:{id:"添加删除数组元素的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加删除数组元素的方法"}},[a._v("#")]),a._v(" 添加删除数组元素的方法")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("数组中有进行增加、删除元素的方法，部分方法如下表")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021720-164047.png",alt:""}})]),a._v(" "),t("p",[a._v("注意：push、unshift 为增加元素方法；pop、shift 为删除元素的方法")])])]),a._v(" "),t("h4",{attrs:{id:"数组排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[a._v("#")]),a._v(" 数组排序")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("数组中有对数组本身排序的方法，部分方法如下表")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021723-592678.png",alt:""}})]),a._v(" "),t("p",[a._v("注意：sort 方法需要传入参数来设置升序、降序排序")]),a._v(" "),t("ul",[t("li",[a._v("如果传入“function(a,b){ return a-b;}”，则为升序")]),a._v(" "),t("li",[a._v("如果传入“function(a,b){ return b-a;}”，则为降序")])])])]),a._v(" "),t("h4",{attrs:{id:"数组索引方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组索引方法"}},[a._v("#")]),a._v(" 数组索引方法")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("数组中有获取数组指定元素索引值的方法，部分方法如下表")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021725-600547.png",alt:""}})])])]),a._v(" "),t("h4",{attrs:{id:"数组转换为字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组转换为字符串"}},[a._v("#")]),a._v(" 数组转换为字符串")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("数组中有把数组转化为字符串的方法，部分方法如下表")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021726-108338.png",alt:""}})]),a._v(" "),t("p",[a._v("注意：join 方法如果不传入参数，则按照 “ , ”拼接元素")])])]),a._v(" "),t("h4",{attrs:{id:"其他方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[a._v("#")]),a._v(" 其他方法")]),a._v(" "),t("ul",[t("li",[a._v("数组中还有其他操作方法，同学们可以在课下自行查阅学习")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021727-258224.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_1-6-字符串对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-字符串对象"}},[a._v("#")]),a._v(" 1.6 字符串对象")]),a._v(" "),t("h4",{attrs:{id:"基本包装类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本包装类型"}},[a._v("#")]),a._v(" 基本包装类型")]),a._v(" "),t("p",[a._v("​ 为了方便操作基本数据类型，JavaScript 还提供了三个特殊的引用类型：String、Number 和 Boolean。")]),a._v(" "),t("p",[a._v("​ 基本包装类型就是把简单数据类型包装成为复杂数据类型，这样基本数据类型就有了属性和方法。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 下面代码有什么问题？")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'andy'")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("​ 按道理基本数据类型是没有属性和方法的，而对象才有属性和方法，但上面代码却可以执行，这是因为")]),a._v(" "),t("p",[a._v("​ js 会把基本数据类型包装为复杂数据类型，其执行过程如下 ：")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 生成临时变量，把简单类型包装为复杂数据类型")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'andy'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 赋值给我们声明的字符变量")]),a._v("\nstr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" temp\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. 销毁临时变量")]),a._v("\ntemp "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h4",{attrs:{id:"字符串的不可变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串的不可变"}},[a._v("#")]),a._v(" 字符串的不可变")]),a._v(" "),t("p",[a._v("​ 指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间。")]),a._v(" "),t("p",[a._v("​ 当重新给字符串变量赋值的时候，变量之前保存的字符串不会被修改，依然在内存中重新给字符串赋值，会重新在内存中开辟空间，这个特点就是字符串的不可变。\n​ 由于字符串的不可变，在"),t("strong",[a._v("大量拼接字符串")]),a._v("的时候会有效率问题")]),a._v(" "),t("h4",{attrs:{id:"根据字符返回位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据字符返回位置"}},[a._v("#")]),a._v(" 根据字符返回位置")]),a._v(" "),t("p",[a._v("​ 字符串通过基本包装类型可以调用部分方法来操作字符串，以下是返回指定字符的位置的方法：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021730-452301.png",alt:""}})]),a._v(" "),t("p",[a._v('​ 案例：查找字符串"abcoefoxyozzopp"中所有 o 出现的位置以及次数')]),a._v(" "),t("ol",[t("li",[a._v("先查找第一个 o 出现的位置")]),a._v(" "),t("li",[a._v("然后 只要 indexOf 返回的结果不是 -1 就继续往后查找")]),a._v(" "),t("li",[a._v("因为 indexOf 只能查找到第一个，所以后面的查找，利用第二个参数，当前索引加 1，从而继续查找")])]),a._v(" "),t("h4",{attrs:{id:"根据位置返回字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据位置返回字符"}},[a._v("#")]),a._v(" 根据位置返回字符")]),a._v(" "),t("p",[a._v("​ 字符串通过基本包装类型可以调用部分方法来操作字符串，以下是根据位置返回指定位置上的字符：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021731-976389.png",alt:""}})]),a._v(" "),t("p",[a._v("​ 在上述方法中，charCodeAt 方法返回的是指定位置上字符对应的 ASCII 码，ASCII 码对照表如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021735-960220.png",alt:""}})]),a._v(" "),t("p",[a._v("​ 案例：判断一个字符串 'abcoefoxyozzopp' 中出现次数最多的字符，并统计其次数")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("核心算法：利用 charAt(） 遍历这个字符串")])]),a._v(" "),t("li",[t("p",[a._v("把每个字符都存储给对象， 如果对象没有该属性，就为 1，如果存在了就 +1")])]),a._v(" "),t("li",[t("p",[a._v("遍历对象，得到最大值和该字符")]),a._v(" "),t("p",[a._v("​ 注意：在遍历的过程中，把字符串中的每个字符作为对象的属性存储在对象总，对应的属性值是该字符出现的次数")])])]),a._v(" "),t("h4",{attrs:{id:"字符串操作方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作方法"}},[a._v("#")]),a._v(" 字符串操作方法")]),a._v(" "),t("p",[a._v("​ 字符串通过基本包装类型可以调用部分方法来操作字符串，以下是部分操作方法：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021738-437615.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"replace-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#replace-方法"}},[a._v("#")]),a._v(" replace()方法")]),a._v(" "),t("p",[a._v("​ replace() 方法用于在字符串中用一些字符替换另一些字符，其使用格式如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("字符串.replace(被替换的字符串， 要替换为的字符串)；\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h4",{attrs:{id:"split-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#split-方法"}},[a._v("#")]),a._v(" split()方法")]),a._v(" "),t("p",[a._v("​ split()方法用于切分字符串，它可以将字符串切分为数组。在切分完毕之后，返回的是一个新数组。")]),a._v(" "),t("p",[a._v("​ 其使用格式如下：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('字符串.split("分割字符")\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"_2-简单数据类型和复杂数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-简单数据类型和复杂数据类型"}},[a._v("#")]),a._v(" 2 - 简单数据类型和复杂数据类型")]),a._v(" "),t("h3",{attrs:{id:"_2-1-简单数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-简单数据类型"}},[a._v("#")]),a._v(" 2.1 简单数据类型")]),a._v(" "),t("p",[a._v("​ "),t("strong",[a._v("简单类型")]),a._v("（"),t("strong",[a._v("基本数据类型")]),a._v("、"),t("strong",[a._v("值类型")]),a._v("）：在存储时变量中存储的是值本身，包括 string ，number，boolean，undefined，null")]),a._v(" "),t("h3",{attrs:{id:"_2-2-复杂数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-复杂数据类型"}},[a._v("#")]),a._v(" 2.2 复杂数据类型")]),a._v(" "),t("p",[a._v("​ "),t("strong",[a._v("复杂数据类型（引用类型）")]),a._v("：在存储时变量中存储的仅仅是地址（引用），通过 new 关键字创建的对象（系统对象、自定义对象），如 Object、Array、Date 等；")]),a._v(" "),t("h3",{attrs:{id:"_2-3-堆栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-堆栈"}},[a._v("#")]),a._v(" 2.3 堆栈")]),a._v(" "),t("ul",[t("li",[a._v("堆栈空间分配区别：")])]),a._v(" "),t("p",[a._v("1、栈（操作系统）：由操作系统自动分配释放存放函数的参数值、局部变量的值等。其操作方式类似于数据结构中的栈；")]),a._v(" "),t("p",[a._v("简单数据类型存放到栈里面")]),a._v(" "),t("p",[a._v("2、堆（操作系统）：存储复杂类型(对象)，一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021742-486680.png",alt:""}})]),a._v(" "),t("ul",[t("li",[t("p",[a._v("简单数据类型的存储方式")]),a._v(" "),t("p",[a._v("​ 值类型变量的数据直接存放在变量（栈空间）中")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021743-581474.png",alt:""}})]),a._v(" "),t("ul",[t("li",[t("p",[a._v("复杂数据类型的存储方式")]),a._v(" "),t("p",[a._v("​ 引用类型变量（栈空间）里存放的是地址，真正的对象实例存放在堆空间中")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021745-280997.png",alt:""}})])])]),a._v(" "),t("h3",{attrs:{id:"_2-4-简单类型传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-简单类型传参"}},[a._v("#")]),a._v(" 2.4 简单类型传参")]),a._v(" "),t("p",[a._v("​ 函数的形参也可以看做是一个变量，当我们把一个值类型变量作为参数传给函数的形参时，其实是把变量在栈空间里的值复制了一份给形参，那么在方法内部对形参做任何修改，都不会影响到的外部变量。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("fn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("；\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("​ 运行结果如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021747-126984.png",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"_2-5-复杂数据类型传参"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-复杂数据类型传参"}},[a._v("#")]),a._v(" 2.5 复杂数据类型传参")]),a._v(" "),t("p",[a._v("​ 函数的形参也可以看做是一个变量，当我们把引用类型变量传给形参时，其实是把变量在栈空间里保存的堆地址复制给了形参，形参和实参其实保存的是同一个堆地址，所以操作的是同一个对象。")]),a._v(" "),t("div",{staticClass:"language-JavaScript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("f1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("x")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// x = p")]),a._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 这个输出什么 ?")]),a._v("\n    x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"张学友"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. 这个输出什么 ?")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"刘德华"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 这个输出什么 ?")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("f1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4. 这个输出什么 ?")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br")])]),t("p",[a._v("​ 运行结果如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202006/20/021751-128963.png",alt:""}})])])}),[],!1,null,null,null);t.default=r.exports}}]);