(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{431:function(n,a,t){"use strict";t.r(a);var e=t(0),s=Object(e.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("在本例中，把数据库连接的工具类DBUtil改造成为注解的方式，来举例演示怎么自定义注解以及如何解析这些自定义注解")]),n._v(" "),a("h2",{attrs:{id:"非注解方式dbutil-连接数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非注解方式dbutil-连接数据库"}},[n._v("#")]),n._v(" 非注解方式DBUtil 连接数据库")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202107/07/230020-193590.png",alt:"1618919596246"}})]),n._v(" "),a("p",[n._v("运行后得到连接数据库的实例")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202107/07/230120-40754.png",alt:"1625670079219"}})]),n._v(" "),a("h2",{attrs:{id:"注解方式重写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解方式重写"}},[n._v("#")]),n._v(" 注解方式重写")]),n._v(" "),a("h3",{attrs:{id:"元注解-可以给自定义的注解添加的注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元注解-可以给自定义的注解添加的注解"}},[n._v("#")]),n._v(" 元注解 （可以给自定义的注解添加的注解）")]),n._v(" "),a("p",[n._v("在讲解元注解概念之前，我们先建立元数据的概念。")]),n._v(" "),a("p",[n._v("元数据在英语中对应单词 metadata, metadata在wiki中的解释是：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Metadata is data [information] that provides information about other data\n为其他数据提供信息的数据\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("这样元注解就好理解了，元注解 meta annotation用于注解 自定义注解 的注解。\n元注解有这么几种：")]),n._v(" "),a("p",[n._v("@Target\n@Retention\n@Inherited\n@Documented\n@Repeatable (java1.8 新增)")]),n._v(" "),a("h4",{attrs:{id:"target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[n._v("#")]),n._v(" @Target")]),n._v(" "),a("p",[n._v("@Targe 表示这个注解能放在什么位置上")]),n._v(" "),a("p",[n._v("ElementType.TYPE：能修饰类、接口或枚举类型\nElementType.FIELD：能修饰成员变量\nElementType.METHOD：能修饰方法\nElementType.PARAMETER：能修饰参数\nElementType.CONSTRUCTOR：能修饰构造器\nElementType.LOCAL_VARIABLE：能修饰局部变量\nElementType.ANNOTATION_TYPE：能修饰注解\nElementType.PACKAGE：能修饰包")]),n._v(" "),a("h4",{attrs:{id:"retention"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retention"}},[n._v("#")]),n._v(" @Retention")]),n._v(" "),a("p",[n._v("表示生命周期")]),n._v(" "),a("p",[a("strong",[n._v("RetentionPolicy.SOURCE：")]),n._v(" 注解只在源代码中存在，编译成class之后，就没了。"),a("a",{attrs:{href:"https://how2j.cn/k/annotation/annotation-system/1060.html#step4028",target:"_blank",rel:"noopener noreferrer"}},[n._v("@Override "),a("OutboundLink")],1),n._v("就是这种注解。\n"),a("strong",[n._v("RetentionPolicy.CLASS：")]),n._v(" 注解在java文件编程成.class文件后，依然存在，但是运行起来后就没了。@Retention的默认值，即当没有显式指定@Retention的时候，就会是这种类型。\n"),a("strong",[n._v("RetentionPolicy.RUNTIME：")]),n._v(" 注解在运行起来之后依然存在，程序可以通过反射获取这些信息")]),n._v(" "),a("h4",{attrs:{id:"inherited"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inherited"}},[n._v("#")]),n._v(" @Inherited")]),n._v(" "),a("p",[n._v("表示该注解具有继承性 比如：设计一个DBUtil的子类，其getConnection2方法，可以获取到父类DBUtil上的注解信息。")]),n._v(" "),a("h4",{attrs:{id:"documented"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documented"}},[n._v("#")]),n._v(" @Documented")]),n._v(" "),a("p",[n._v("在用javadoc命令生成API文档后，DBUtil的文档里会出现该注解说明。")]),n._v(" "),a("h4",{attrs:{id:"repeatable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeatable"}},[n._v("#")]),n._v(" Repeatable")]),n._v(" "),a("p",[n._v("当没有@Repeatable修饰的时候，注解在同一个位置，只能出现一次，如例所示：")]),n._v(" "),a("p",[n._v("使用@Repeatable之后，再配合一些其他动作，就可以在同一个地方使用多次了。")]),n._v(" "),a("h3",{attrs:{id:"编写一个自定义注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写一个自定义注解"}},[n._v("#")]),n._v(" 编写一个自定义注解")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\nimport java.lang.reflect.Method;\n\n@Target({ElementType.METHOD,ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface JDBCConfig {\n    String ip () default "127.0.0.1";\n    int port () default 3306;\n    String database() default "test";\n    String encoding() default "utf-8";\n    String loginName() default "root";\n    String password() default "123456";\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br")])]),a("p",[n._v("写好了就通过反射，自己处理这个注解")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n@JDBCConfig()\npublic class DBUtils {\n    static {\n        try {\n            Class.forName("com.mysql.jdbc.Driver");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n    public static Connection getConnection() throws SQLException {\n        JDBCConfig config = DBUtils.class.getAnnotation(JDBCConfig.class);\n\n        String ip = config.ip();\n        int port = config.port();\n        String database = config.database();\n        String encoding = config.encoding();\n        String loginName = config.loginName();\n        String password = config.password();\n        String url = String.format("jdbc:mysql://%s:%d/%s?characterEncoding=%s", ip, port, database, encoding);\n        return DriverManager.getConnection(url,loginName,password);\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br")])]),a("p",[n._v("然后就连接成功了")]),n._v(" "),a("p",[n._v("这样的话如果你有多个类连接不同的数据库，或者不同用户连接数据库，就不用可以在注解上直接修改就行了")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/anchuanyuan/TuChuangForITX/main/image/202104/20/203105-697590.png",alt:"1618921865643"}})])])}),[],!1,null,null,null);a.default=s.exports}}]);